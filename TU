import pandas as pd

# Example DataFrame
data = {
    'BALDIF01': [-100, -50, -100, -50, -200, -200, -100, 50, 100],
    'bad06m': [1, 0, 1, 1, 0, 1, 0, 0, 1]  # 1 = bad, 0 = good
}
df = pd.DataFrame(data)

# Step 1: Filter negative BALDIF01 values
negative_baldif = df[df['BALDIF01'] < 0]

# Step 2: Group by BALDIF01 and calculate good/bad counts
result = (
    negative_baldif.groupby('BALDIF01')['bad06m']
    .value_counts()
    .unstack(fill_value=0)  # Reshape for better readability
    .rename(columns={0: 'Good_Count', 1: 'Bad_Count'})  # Rename columns
    .reset_index()
)

print(result)


unique_negatives = negative_baldif['BALDIF01'].unique()
mapping = {value: idx + 1 for idx, value in enumerate(sorted(unique_negatives))}

# Step 3: Map the values and create a new column
df['BALDIF01_mapped'] = df['BALDIF01'].map(mapping)


positive_or_null_baldif = df[(df['BALDIF01'] >= 0) | (df['BALDIF01'].isnull())]
















import pandas as pd

# Example DataFrames
main_df = pd.DataFrame({
    'app_id': [1, 2, 3, 4, 5],
    'other_col': ['A', 'B', 'C', 'D', 'E']
})

df1 = pd.DataFrame({
    'app_id': [1, 2, 3],
    'cola_woe': [0.1, 0.2, 0.3]
})

df2 = pd.DataFrame({
    'app_id': [4, 5],
    'cola_woe': [0.4, 0.5]
})

# Merge df1 into main_df
main_df = main_df.merge(df1, on='app_id', how='left', suffixes=('', '_df1'))

# Merge df2 into main_df
main_df = main_df.merge(df2, on='app_id', how='left', suffixes=('', '_df2'))

# Fill NaN for unmatched values and rename columns as needed
main_df['cola_woe_final'] = main_df['cola_woe'].combine_first(main_df['cola_woe_df2'])

print(main_df)

